/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// nice!view adapter override
// I added a "bodge wire" from the nice!view CS pin to the nice!nanov2 pin P1.01 (101)
// Docs suggest using P0.06[D1] (006) but the Aurora lily58 uses that pin for RGB
// I have no RGB but would like to avoid this pain in the future

nice_view_spi: &spi0 {
    cs-gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>; //gpio1 is P1.01 (101)
};

// Keymap definition

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                        &kp Y   &kp U     &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                        &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT   &kp RBKT  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LGUI  &kp LALT  &mo 1   &kp SPACE  &kp RET   &mo 2   &kp RALT  &kp RCTRL
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                              &out OUT_BLE  &out OUT_USB   &out OUT_TOG  &kp MINUS  &kp EQUAL        &kp DEL
&bt BT_PRV  &bt BT_NXT        &kp UP             &out OUT_TOG       &out OUT_USB  &out OUT_BLE                              &kp HOME      &kp PAGE_DOWN  &kp PG_UP     &kp END    &kp PRINTSCREEN  &trans
&trans      &kp LEFT          &kp DOWN           &kp RIGHT          &trans        &trans                                    &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT  &trans           &trans
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &kp K_VOL_DN  &kp K_VOL_UP  &trans        &trans         &trans        &trans     &trans           &trans
                                                 &trans             &trans        &trans        &trans        &trans        &trans        &trans         &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE  &trans  &trans  &kp NUMBER_3  &trans   &trans                               &trans           &trans           &trans           &kp MINUS        &kp EQUAL  &kp DEL
&trans     &trans  &trans  &trans        &trans   &trans                               &mkp LCLK        &mkp MCLK        &mkp RCLK        &kp KP_NUMLOCK   &trans     &trans
&kp F1     &kp F2  &kp F3  &kp F4        &kp F5   &kp F6                               &kp KP_NUMBER_4  &kp KP_NUMBER_2  &kp KP_NUMBER_8  &kp KP_NUMBER_6  &trans     &trans
&kp F7     &kp F8  &kp F9  &kp F10       &kp F11  &kp F12  &kp K_VOL_DN  &kp K_VOL_UP  &kp KP_PLUS      &kp MINUS        &kp EQUAL        &kp LBKT         &kp RBKT   &kp BSLH
                           &trans        &trans   &trans   &trans        &trans        &trans           &trans           &trans
            >;
        };
    };
};
